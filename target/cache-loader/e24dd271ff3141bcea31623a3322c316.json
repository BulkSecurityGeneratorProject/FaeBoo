{"remainingRequest":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/ts-loader/index.js??ref--9-3!/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/angular-router-loader/src/index.js!/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/tslint-loader/index.js!/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/src/main/webapp/app/entities/friend/friend-update.component.ts","dependencies":[{"path":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/src/main/webapp/app/entities/friend/friend-update.component.ts","mtime":1547152357605},{"path":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/cache-loader/dist/cjs.js","mtime":1545880467128},{"path":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/thread-loader/dist/cjs.js","mtime":1545880466599},{"path":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar friend_service_1 = require(\"./friend.service\");\nvar core_2 = require(\"app/core\");\nvar FriendUpdateComponent = /** @class */ (function () {\n    function FriendUpdateComponent(jhiAlertService, friendService, userService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.friendService = friendService;\n        this.userService = userService;\n        this.activatedRoute = activatedRoute;\n    }\n    FriendUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var friend = _a.friend;\n            _this.friend = friend;\n        });\n        this.userService.query().subscribe(function (res) {\n            _this.users = res.body;\n        }, function (res) { return _this.onError(res.message); });\n    };\n    FriendUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    FriendUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        if (this.friend.id !== undefined) {\n            this.subscribeToSaveResponse(this.friendService.update(this.friend));\n        }\n        else {\n            this.subscribeToSaveResponse(this.friendService.create(this.friend));\n        }\n    };\n    FriendUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    FriendUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    FriendUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    FriendUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    FriendUpdateComponent.prototype.trackUserById = function (index, item) {\n        return item.id;\n    };\n    var _a, _b, _c, _d;\n    FriendUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-friend-update',\n            templateUrl: './friend-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof friend_service_1.FriendService !== \"undefined\" && friend_service_1.FriendService) === \"function\" ? _b : Object, typeof (_c = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _c : Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _d : Object])\n    ], FriendUpdateComponent);\n    return FriendUpdateComponent;\n}());\nexports.FriendUpdateComponent = FriendUpdateComponent;\n",{"version":3,"file":"/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/src/main/webapp/app/entities/friend/friend-update.component.ts","sourceRoot":"","sources":["/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/angular-router-loader/src/index.js!/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/node_modules/tslint-loader/index.js!/Users/thulasipuppala/Labs/JhipsterGroupProject-Client/src/main/webapp/app/entities/friend/friend-update.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,0CAAiD;AAGjD,2CAA8C;AAG9C,mDAAiD;AACjD,iCAA8C;AAM9C;IAMI,+BACY,eAAgC,EAChC,aAA4B,EAC5B,WAAwB,EACxB,cAA8B;QAH9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;IACvC,CAAC;IAEJ,wCAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,EAAU;gBAAR,kBAAM;YACxC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,SAAS,CAC9B,UAAC,GAA0B;YACvB,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;QAC1B,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;IACN,CAAC;IAED,6CAAa,GAAb;QACI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,oCAAI,GAAJ;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,SAAS,EAAE;YAC9B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACxE;aAAM;YACH,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACxE;IACL,CAAC;IAEO,uDAAuB,GAA/B,UAAgC,MAAyC;QAAzE,iBAEC;QADG,MAAM,CAAC,SAAS,CAAC,UAAC,GAA0B,IAAK,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,EAAE,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC3H,CAAC;IAEO,6CAAa,GAArB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,2CAAW,GAAnB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEO,uCAAO,GAAf,UAAgB,YAAoB;QAChC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,6CAAa,GAAb,UAAc,KAAa,EAAE,IAAW;QACpC,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;;IA1DQ,qBAAqB;QAJjC,gBAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE,gCAAgC;SAChD,CAAC;qEAQ+B,6BAAe,oBAAf,6BAAe,oDACjB,8BAAa,oBAAb,8BAAa,oDACf,kBAAW,oBAAX,kBAAW,oDACR,uBAAc,oBAAd,uBAAc;OAVjC,qBAAqB,CA2DjC;IAAD,4BAAC;CAAA,AA3DD,IA2DC;AA3DY,sDAAqB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { IFriend } from 'app/shared/model/friend.model';\nimport { FriendService } from './friend.service';\nimport { IUser, UserService } from 'app/core';\n\n@Component({\n    selector: 'jhi-friend-update',\n    templateUrl: './friend-update.component.html'\n})\nexport class FriendUpdateComponent implements OnInit {\n    friend: IFriend;\n    isSaving: boolean;\n\n    users: IUser[];\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private friendService: FriendService,\n        private userService: UserService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ friend }) => {\n            this.friend = friend;\n        });\n        this.userService.query().subscribe(\n            (res: HttpResponse<IUser[]>) => {\n                this.users = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (this.friend.id !== undefined) {\n            this.subscribeToSaveResponse(this.friendService.update(this.friend));\n        } else {\n            this.subscribeToSaveResponse(this.friendService.create(this.friend));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IFriend>>) {\n        result.subscribe((res: HttpResponse<IFriend>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackUserById(index: number, item: IUser) {\n        return item.id;\n    }\n}\n"]}]}